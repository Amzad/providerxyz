# housingxyz-provider :: azure-devops

name: $(date:yyyyMMdd)$(rev:.rr)

stages:
  - stage: 'build'
    displayName: 'build'
    jobs:
      - job:
        displayName: 'build::aspnet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet sdk'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet tool install --global dotnet-sonarscanner
            displayName: 'dotnet install'
          - script: |
              cd aspnet
              dotnet sonarscanner begin /k:"housingxyz-provider" /n:"HOUSING(xyz) Provider" /o:"revaturexyz" /v:"0.0.0" /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml /d:sonar.host.url=https://sonarcloud.io/ /d:sonar.login=$SONAR_LOGIN
              dotnet build
              dotnet sonarscanner end /d:sonar.login=$SONAR_LOGIN
            displayName: 'dotnet build::branch'
            env:
              SONAR_LOGIN: $(sonarcloud.login)
          - script: |
              cd aspnet
              dotnet sonarscanner begin /k:"housingxyz-provider" /n:"HOUSING(xyz) Provider" /o:"revaturexyz" /v:"0.0.0" /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml /d:sonar.host.url=https://sonarcloud.io/ /d:sonar.login=$(sonar.token) /d:sonar.pullrequest.base=master /d:sonar.pullrequest.branch=$PULL_REQUEST_BRANCH /d:sonar.pullrequest.key=$PULL_REQUEST_KEY /d:sonar.pullrequest.provider=GitHub /d:sonar.pullrequest.github.repository=revaturexyz/housingxyz-provider
              dotnet build
              dotnet sonarscanner end /d:sonar.login=$SONAR_LOGIN
            displayName: 'dotnet build::pull-request'
            env:
              PULL_REQUEST_BRANCH: $(Build.SourceBranchName)
              PULL_REQUEST_KEY: $(System.PullRequest.PullRequestNumber)
              SONAR_LOGIN: $(sonarcloud.login)

  - stage: 'pack'
    condition: succeeded('build')
    dependsOn:
      - build
    displayName: 'pack'
    jobs:
      - job:
        displayName: 'pack::aspnet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Docker@2
            inputs:
              command: 'login'
              containerRegistry: 'revaturexyz-docker'
            displayName: 'docker login'
          - script: |
              docker image build -f .docker/dockerfile -t housingxyz-provider .
            displayName: 'docker build'
          - script: |
              docker image tag housingxyz-provider revaturexyz/housingxyz-provider:pre
              docker image push revaturexyz/housingxyz-provider:pre
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/broker'))
            displayName: 'docker push::pre'
          - script: |
              docker image tag housingxyz-provider revaturexyz/housingxyz-provider:dev
              docker image push revaturexyz/housingxyz-provider:dev
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
            displayName: 'docker push::dev'
          - script: |
              docker image tag housingxyz-provider revaturexyz/housingxyz-provider:stg
              docker image push revaturexyz/housingxyz-provider:stg
            condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
            displayName: 'docker push::stg'
          - task: Docker@2
            inputs:
              command: 'logout'
              containerRegistry: 'revaturexyz-docker'
            displayName: 'docker logout'

  - stage: 'pre'
    condition: succeeded('pack')
    dependsOn:
      - pack
    displayName: 'deploy::pre'
    jobs:
      - job:
        displayName: 'deploy::pre::aspnet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadSecureFile@1
            displayName: 'docker compose'
            inputs:
              secureFile: 'dockerup.housingxyz-provider.pre.yaml'
            name: dkup
          - task: DownloadSecureFile@1
            displayName: 'terraform login'
            inputs:
              secureFile: 'terraform.key'
            name: tfkey
          - task: DownloadSecureFile@1
            displayName: 'terraform state'
            inputs:
              secureFile: 'backend.housingxyz.hcl'
            name: tfstate
          - task: DownloadSecureFile@1
            displayName: 'terraform variables'
            inputs:
              secureFile: 'terraform.housingxyz-provider.pre.auto.tfvars'
            name: tfvars

  - stage: 'dev'
    condition: succeeded('pack')
    dependsOn:
      - pack
    displayName: 'deploy::dev'
    jobs:
      - job:
        displayName: 'deploy::dev::aspnet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadSecureFile@1
            displayName: 'docker compose'
            inputs:
              secureFile: 'dockerup.housingxyz-provider.dev.yaml'
            name: dkup
          - task: DownloadSecureFile@1
            displayName: 'terraform login'
            inputs:
              secureFile: 'terraform.key'
            name: tfkey
          - task: DownloadSecureFile@1
            displayName: 'terraform state'
            inputs:
              secureFile: 'backend.housingxyz.hcl'
            name: tfstate
          - task: DownloadSecureFile@1
            displayName: 'terraform variables'
            inputs:
              secureFile: 'terraform.housingxyz-provider.dev.auto.tfvars'
            name: tfvars

  - stage: 'stg'
    condition: succeeded('pack')
    dependsOn:
      - pack
    displayName: 'deploy::stg'
    jobs:
      - job:
        displayName: 'deploy::stg::aspnet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadSecureFile@1
            displayName: 'docker compose'
            inputs:
              secureFile: 'dockerup.housingxyz-provider.stg.yaml'
            name: dkup
          - task: DownloadSecureFile@1
            displayName: 'terraform login'
            inputs:
              secureFile: 'terraform.key'
            name: tfkey
          - task: DownloadSecureFile@1
            displayName: 'terraform state'
            inputs:
              secureFile: 'backend.housingxyz.hcl'
            name: tfstate
          - task: DownloadSecureFile@1
            displayName: 'terraform variables'
            inputs:
              secureFile: 'terraform.housingxyz-provider.stg.auto.tfvars'
            name: tfvars

trigger:
  branches:
    include:
      - master
      - broker
  tags:
    include:
      - '*'

variables:
  - group: azure.vars
  - group: cloudflare.vars
  - group: sonarcloud.vars
